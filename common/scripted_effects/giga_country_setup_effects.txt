# used in country scope, sets all owned leaders' background planet to $planet$, and mills the leader pool
giga_set_all_leaders_homeworld = {
    save_event_target_as = giga_new_homeworld_context
    $planet$ = {
        save_event_target_as = giga_new_homeworld
    }

    every_owned_pop_species = {
        set_species_homeworld = event_target:giga_new_homeworld
        if = {
            limit = {
                has_trait = trait_pc_continental_preference
            }
            change_species_characteristics = {
                remove_trait = trait_pc_continental_preference
                add_traits_at_start_of_list = yes
                add_trait = trait_pc_birch_preference
            }
        }
    }
    # since we can't set leader homeworlds, clone the lot of them with the new homeworld and reset them ALL
    every_owned_leader = {
        limit = {
            is_gestalt_node = no
        }
        save_event_target_as = source_leader
        event_target:giga_new_homeworld_context = {
            clone_leader = {
                target = event_target:source_leader
                background_planet = event_target:giga_new_homeworld
                effect = {
                    save_event_target_as = cloned_leader
                    copy_flags_and_variables_from= event_target:source_leader
                }
            }
        }
        # fleet and planet assignments
        if = {
            limit = {
                exists = fleet
            }
            fleet = {
                assign_leader = event_target:cloned_leader
            }
        }
        else_if = {
            limit = {
                exists = planet
            }
            planet = {
                assign_leader = event_target:cloned_leader
            }
        }
        # council assignments
        if = {
            limit = {
                is_ruler = yes
            }
            event_target:giga_new_homeworld_context = {
                assign_leader = event_target:cloned_leader
            }
        }
        else_if = {
            limit = {
                is_councilor_type = councilor_state
            }
            event_target:cloned_leader = {
                set_council_position = councilor_state
            }
        }
        else_if = {
            limit = {
                is_councilor_type = councilor_defense
            }
            event_target:cloned_leader = {
                set_council_position = councilor_defense
            }
        }
        else_if = {
            limit = {
                is_councilor_type = councilor_research
            }
            event_target:cloned_leader = {
                set_council_position = councilor_research
            }
        }

        # remove the original leader
        kill_leader = { show_notification = no }
    }

    # and the leader pool - just destroy them all and make new ones

    every_pool_leader = {
        if = {
            limit = { leader_class = official }
            giga_set_all_leaders_homeworld_pool_leader = { class = official }
        }
        else_if = {
            limit = { leader_class = commander }
            giga_set_all_leaders_homeworld_pool_leader = { class = commander }
        }
        else_if = {
            limit = { leader_class = scientist }
            giga_set_all_leaders_homeworld_pool_leader = { class = scientist }
        }
        kill_leader = { show_notification = no }
    }

}

# internal, used by giga_set_all_leaders_homeworld
giga_set_all_leaders_homeworld_pool_leader = {
    event_target:giga_new_homeworld_context = {
        create_saved_leader = {
            species = prev.species
            key = giga_new_homeworld_leader
            class = $class$
            background_planet = event_target:giga_new_homeworld
        }
        activate_saved_leader = {
            key = giga_new_homeworld_leader
            add_to_owned = no
        }
    }
}